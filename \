import matplotlib.pyplot as plt
import numpy as np

def plot_class(func):
    Y, X = np.meshgrid(
        np.linspace(-1.0,+1.0, 500),
        np.linspace(-1.0,+1.0, 500),
    )
    
    Z = func(X,Y)
    Z = np.sign(Z)

    plt.imshow(Z, interpolation='nearest', extent=(-1,1,-1,1),
               cmap='coolwarm', vmin=-5.0, vmax=+5.0)

    plt.scatter([0],[0],color='black', s=10)

def plot_data(): 
    data = {
        ('red','+',90):(
            [+0.2,+0.3,+0.4,+0.0,+0.0,+0.0,],
            [+0.0,+0.0,+0.0,+0.5,+0.6,+0.7,]
        ),
        ('blue','x',60):(
            [-0.5,-0.6,-0.7,-0.3,-0.4,-0.2,],
            [+0.0,+0.0,+0.1,+0.8,+0.9,-0.1,]
        ),
    }
    for (c,m,s), (xs,ys) in data.items(): 
        plt.scatter(xs, ys, color=c, marker=m, s=s)

def render(file_name):
    plt.xticks([])
    plt.yticks([])
    plt.gca().axis('off')
    plt.gca().set_aspect('equal')
    plt.gcf().set_size_inches(5.0, 5.0)
    plt.tight_layout()
    plt.savefig(file_name)

todo = {
    'lin-a.png': lambda X,Y:          (+0.8)*X + (-0.2)*Y,
    'lin-b.png': lambda X,Y:          (+0.5)*X + (+0.6)*Y,
    'lin-c.png': lambda X,Y: (-0.3) + (-0.3)*X + (-0.9)*Y,
    'lin-d.png': lambda X,Y: (-0.7) + (-0.9)*X + (+0.6)*Y,
    'lin-e.png': lambda X,Y: (-0.1) + (+0.6)*X + (-0.7)*Y + (+0.9)*X*X + (+0.2)*X*Y + (+1.0)*Y*Y,
    'lin-f.png': lambda X,Y: (+0.1) + (+0.5)*X + (-0.8)*Y + (+0.0)*X*X - (+2.0)*X*Y + (+2.0)*Y*Y,
}
for name, func in todo.items():
    plot_class(func)
    plot_data()
    render(name)
    plt.clf()
